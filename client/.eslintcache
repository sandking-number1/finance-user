[{"/Users/louisehamerston/Code/rise-app/finance-user/client/src/index.js":"1","/Users/louisehamerston/Code/rise-app/finance-user/client/src/App.js":"2","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Login.js":"3","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanList.js":"4","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Error.js":"5","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanDetail.js":"6","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanListAdmin.js":"7","/Users/louisehamerston/Code/rise-app/finance-user/client/src/views/AdminDashboard.js":"8","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Page404.js":"9","/Users/louisehamerston/Code/rise-app/finance-user/client/src/views/Dashboard.js":"10","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/UserDetail.js":"11","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/UserList.js":"12","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/CreateUser.js":"13","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/NavBarAdmin.js":"14","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Header.js":"15","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/NavBar.js":"16","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Logout.js":"17","/Users/louisehamerston/Code/rise-app/finance-user/client/src/Constants.js":"18","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Documentation.js":"19","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanDetailAdmin.js":"20"},{"size":559,"mtime":1613130810464,"results":"21","hashOfConfig":"22"},{"size":2155,"mtime":1620323980036,"results":"23","hashOfConfig":"22"},{"size":2787,"mtime":1617135912058,"results":"24","hashOfConfig":"22"},{"size":3686,"mtime":1618859030623,"results":"25","hashOfConfig":"22"},{"size":98,"mtime":1613321793915,"results":"26","hashOfConfig":"22"},{"size":10405,"mtime":1618693207557,"results":"27","hashOfConfig":"22"},{"size":3678,"mtime":1618859027900,"results":"28","hashOfConfig":"22"},{"size":2076,"mtime":1618696634215,"results":"29","hashOfConfig":"22"},{"size":190,"mtime":1613322712490,"results":"30","hashOfConfig":"22"},{"size":1170,"mtime":1618696646805,"results":"31","hashOfConfig":"22"},{"size":2611,"mtime":1618696760840,"results":"32","hashOfConfig":"22"},{"size":1735,"mtime":1618696506529,"results":"33","hashOfConfig":"22"},{"size":3570,"mtime":1619775932847,"results":"34","hashOfConfig":"22"},{"size":1056,"mtime":1618673269737,"results":"35","hashOfConfig":"22"},{"size":366,"mtime":1613130905142,"results":"36","hashOfConfig":"22"},{"size":799,"mtime":1618672591996,"results":"37","hashOfConfig":"22"},{"size":101,"mtime":1612703396210,"results":"38","hashOfConfig":"22"},{"size":123,"mtime":1616277593709,"results":"39","hashOfConfig":"22"},{"size":328,"mtime":1617311496335,"results":"40","hashOfConfig":"22"},{"size":10475,"mtime":1619780599893,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1i2tqt0",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/louisehamerston/Code/rise-app/finance-user/client/src/index.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["93","94"],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/App.js",["95","96"],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Login.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanList.js",["97"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { config } from '../Constants';\nimport './LoanList.css';\nvar url = config.url.API_URL;\n\nclass LoanList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loansCollection: []\n        };\n    }\n\n    componentDidMount() {\n        const user = JSON.parse(localStorage[\"user\"]);\n        const token = user.token;\n        axios({\n            method: 'get',\n            url: `${url}/business`,\n            headers: { token: token }\n        })\n            .then(res => {\n                this.setState({ loansCollection: res.data });\n                console.log(res.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    sortLoans() {\n        function hasApplied(business) {\n            if (business.loan) return business;\n        }\n        const cloneLoans = [...this.state.loansCollection];\n        const result = cloneLoans.filter(hasApplied);\n        for(let i = 0; i <= result.length -1; i++)  {\n            for (let j = 0; j < result.length-1; j++) {\n                const loan1 = result[j];\n                const loan2 = result[j+1];\n                if( (loan2.loan.status[loan2.loan.status.length-1].createdAt) > loan1.loan.status[loan1.loan.status.length-1].createdAt) {\n                    result[j]  = loan2;\n                    result[j+1] = loan1;\n                }\n            }\n        }\n        return (\n            result\n        )\n    }\n\n    getAllBusinessesWithLoans() {\n        const sorted = this.sortLoans();\n        return sorted.map((data, i) => {\n            if (data.loan) {\n                const arrayLength = data.loan.status.length;\n                let statusBadge = \"\";\n                if ((data.loan.status[arrayLength - 1].currentStatus) === \"Approved\") {\n                    statusBadge = <p class=\"btn btn-outline-success disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                else if ((data.loan.status[arrayLength - 1].currentStatus) === \"Rejected\") {\n                    statusBadge = <p class=\"btn btn-outline-danger disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                else {\n                    statusBadge = <p class=\"btn btn-outline-secondary disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                return <tr>\n                    <td className=\"app-id\">{data._id}</td>\n                    <td className=\"business-name\"><a href={`/dashboard/loans/${data._id}`}>{data.businessName}</a></td>\n                    <td>${data.loan.amount}</td>\n                    <td>{new Date(data.loan.status[arrayLength - 1].createdAt).toLocaleString('en-GB')}</td>\n                    <td>{statusBadge}</td>\n                </tr>\n            }\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"wrapper-users\">\n                <table className=\"table table-striped\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <td>Application ID</td>\n                            <td>Business Name</td>\n                            <td>Amount Requested</td>\n                            <td>Most Recent Update</td>\n                            <td>Application Status</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.getAllBusinessesWithLoans()}\n                    </tbody>\n                </table>\n            </div>\n\n        )\n    }\n}\n\nexport default LoanList;","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Error.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanDetail.js",["98","99","100"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { config } from '../Constants';\nimport './LoanDetail.css';\nvar url = config.url.API_URL;\n\nclass LoanDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            business: {\n            },\n            merchant: {\n\n            },\n            isLoaded: false,\n            status: {\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ statusUpdate: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let updateMessage = 'Update to your loan application status';\n\n        //Below calls function to send push notification to merchant's device if status update matches condition\n\n        if (this.state.statusUpdate == 'Documentation Requested') {\n            updateMessage = 'Update to loan application status: documentation has been requested';\n        }\n\n        else if (this.state.statusUpdate == 'Approved') {\n            updateMessage = 'Update to loan application status: your loan application was approved!';\n        }\n\n        else if (this.state.statusUpdate == 'Rejected') {\n            updateMessage = 'Update to loan application status: your loan application was rejected';\n        }\n\n        this.setState({\n            status: this.state.statusUpdate,\n        });\n        const user = JSON.parse(localStorage[\"user\"]);\n        const token = user.token;\n\n        axios({\n            method: 'post',\n            url: `${url}/loans/${this.props.match.params.loanId}`,\n            headers: { token: token },\n            data: {\n                currentStatus: this.state.statusUpdate\n            }\n        })\n            .then(() => {\n                axios({\n                    method: 'post',\n                    url: `${url}/loans/${this.props.match.params.loanId}/notify`,\n                    headers: { token: token },\n                    data: {\n                        update: updateMessage\n                    }\n                })\n            })\n            .then((res) => {\n                //console.log(res.data)\n                alert(`Loan application status updated`)\n                //window.location.reload(true);\n            }).catch((error) => {\n                console.log(error)\n            });\n    }\n\n    async componentDidMount() {\n        const user = JSON.parse(localStorage[\"user\"]);\n        const token = user.token;\n        await axios({\n            method: 'get',\n            url: `${url}/business/${this.props.match.params.loanId}`,\n            headers: { token: token }\n        })\n            .then(res => {\n                this.setState({ business: res.data, isLoaded: true })\n                //console.log(res.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        await axios({\n            method: 'get',\n            url: `${url}/merchants/${this.state.business.merchantId}`,\n            headers: { token: token }\n        })\n            .then(res => {\n                this.setState({ merchant: res.data })\n                console.log(res.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        if (!this.state.isLoaded) {\n            return (<div>Loading...</div>);\n        }\n        else {\n            const loan = {\n                loan: this.state.business.loan\n            };\n            const arrayLength = loan.loan.status.length;\n            let element = \"\";\n            if ((loan.loan.status[arrayLength - 1].currentStatus) !== \"Submitted by Merchant\" && (loan.loan.status[arrayLength - 1].currentStatus) !== \"Documentation Requested\") {\n                element = (\n                    <div className=\"wrapper-documentation\">\n                        <div className=\"row\">\n                            <div className=\"col\" align=\"center\">\n                                <div className=\"loan-detail-header\">\n                                    <h5>Documentation In Support of RISE Application</h5>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div>\n                                    <label>View Documentation:</label>\n                                    <h5>\n                                        <button type=\"button\" class=\"btn-documentation btn btn-secondary\">\n                                            <a href={`/dashboard/loans/${this.state.business._id}/docs`}>Uploaded Image</a>\n                                        </button>\n                                    </h5>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            let statusBadge = \"\";\n            if ((loan.loan.status[arrayLength - 1].currentStatus) === \"Approved\") {\n                statusBadge = <h5 class=\"btn btn-outline-success disabled\">{loan.loan.status[arrayLength - 1].currentStatus}</h5>\n            }\n            else if ((loan.loan.status[arrayLength - 1].currentStatus) === \"Rejected\") {\n                statusBadge = <h5 class=\"btn btn-outline-danger disabled\">{loan.loan.status[arrayLength - 1].currentStatus}</h5>\n            }\n            else {\n                statusBadge = <h5 class=\"btn btn-outline-secondary disabled\">{loan.loan.status[arrayLength - 1].currentStatus}</h5>\n            }\n            return (\n                <div className=\"wrapper\">\n                    <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\"></div>\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <label>Business Name: </label>\n                            <h5>{this.state.business.businessName}</h5>\n                        </div>\n\n                        <div className=\"col\">\n                            <label>Application #: </label>\n                            <p>{loan.loan._id}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <label>Loan application value:</label>\n                            <h5>£{loan.loan.amount} </h5>\n                        </div>\n\n                        <div className=\"col\">\n                            <label>Current status:</label>\n                            <p>\n                                {statusBadge}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <form onSubmit={this.handleSubmit}>\n                                <label>Update status:</label>\n                                <p>\n                                    <select statusUpdate={this.state.statusUpdate} onChange={this.handleChange} class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\n                                        <option statusUpdate=\"\">SELECT: </option>\n                                        <option statusUpdate=\"requested\">Documentation Requested</option>\n                                        <option statusUpdate=\"pending\">Pending Approval</option>\n                                        <option statusUpdate=\"rejected\">Rejected</option>\n                                    </select>\n                                    <input type=\"submit\" value=\"Update\" />\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\" align=\"center\">\n                            <div className=\"loan-detail-header\">\n                                <h5>Business Sales Data</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <label>Gross Monthly Sales:</label>\n                            <h5> £{this.state.business.grossMonthlySales}</h5>\n                        </div>\n\n                        <div className=\"col\">\n                            <label>Average Transaction Value:</label>\n                            <h5> £{this.state.business.averageTransactionValue}</h5>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\" align=\"center\">\n                            <div className=\"loan-detail-header\">\n                                <h5>Merchant Account Details</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <label>Merchant Account Holder:</label>\n                            <h5> {this.state.merchant.accountHolderName}</h5>\n                        </div>\n\n                        <div className=\"col\">\n                            <label>Merchant Email:</label>\n                            <h5> {this.state.merchant.email}</h5>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <label>Merchant Address:</label>\n                            <h5> {this.state.merchant.postalAddress}</h5>\n                        </div>\n\n                        <div className=\"col\">\n                            <label>Merchant Contact No:</label>\n                            <h5> {this.state.merchant.phone}</h5>\n                        </div>\n                    </div>\n\n                    {element}\n\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default LoanDetail;","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanListAdmin.js",["101"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { config } from '../Constants';\nimport './LoanList.css';\nvar url = config.url.API_URL;\n\nclass LoanList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loansCollection: []\n        };\n    }\n\n    componentDidMount() {\n        const user = JSON.parse(localStorage[\"user\"]);\n        const token = user.token;\n        axios({\n            method: 'get',\n            url: `${url}/business`,\n            headers: {token: token }\n        })\n            .then(res => {\n                this.setState({ loansCollection: res.data });\n                console.log(res.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    sortLoans() {\n        function hasApplied(business) {\n            if (business.loan) return business;\n        }\n        const cloneLoans = [...this.state.loansCollection];\n        const result = cloneLoans.filter(hasApplied);\n        for(let i = 0; i <= result.length -1; i++)  {\n            for (let j = 0; j < result.length-1; j++) {\n                const loan1 = result[j];\n                const loan2 = result[j+1];\n                if( (loan2.loan.status[loan2.loan.status.length-1].createdAt) > loan1.loan.status[loan1.loan.status.length-1].createdAt) {\n                    result[j]  = loan2;\n                    result[j+1] = loan1;\n                }\n            }\n        }\n        return (\n            result\n        )\n    }\n\n    getAllBusinessesWithLoans() {\n        const sorted = this.sortLoans();\n        return sorted.map((data, i) => {\n            if (data.loan) {\n                const arrayLength = data.loan.status.length;\n                let statusBadge = \"\";\n                if ((data.loan.status[arrayLength - 1].currentStatus) === \"Approved\") {\n                    statusBadge = <p class=\"btn btn-outline-success disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                else if ((data.loan.status[arrayLength - 1].currentStatus) === \"Rejected\") {\n                    statusBadge = <p class=\"btn btn-outline-danger disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                else {\n                    statusBadge = <p class=\"btn btn-outline-secondary disabled status-badge\">{data.loan.status[arrayLength - 1].currentStatus}</p>\n                }\n                return <tr>\n                    <td className=\"app-id\">{data._id}</td>\n                    <td className=\"business-name\"><a href={`/admin/loans/${data._id}`}>{data.businessName}</a></td>\n                    <td>${data.loan.amount}</td>\n                    <td>{new Date(data.loan.status[arrayLength - 1].createdAt).toLocaleString('en-GB')}</td>\n                    <td>{statusBadge}</td>\n                </tr>;\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper-users\">\n                <table className=\"table table-striped\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                        <td>Application ID</td>\n                            <td>Business Name</td>\n                            <td>Amount Requested</td>\n                            <td>Most Recent Update</td>\n                            <td>Application Status</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.getAllBusinessesWithLoans()}\n                    </tbody>\n                </table>\n            </div>\n\n        )\n    }\n}\n\nexport default LoanList;","/Users/louisehamerston/Code/rise-app/finance-user/client/src/views/AdminDashboard.js",["102","103"],"import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport NavBar from '../components/NavBar';\nimport NavBarAdmin from '../components/NavBarAdmin';\nimport Error from '../components/Error';\nimport './Dashboard.css';\n\nexport default function AdminDashboard({ children }) {\n  const history = useHistory();\n  if (localStorage[\"user\"] == null) {\n    history.replace(\"/login\");\n    return (null);\n  }\n  else if (JSON.parse(localStorage[\"user\"]).role !== \"Admin\") {\n    return (\n      <div className=\"App\">\n        <div class=\"body\">\n\n          <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n\n            <div class=\"header w-100\"><Route component={Header} /></div>\n          </nav>\n\n          <div class=\"container-fluid\">\n            <div class=\"row main\">\n\n              <Route component={NavBarAdmin} />\n\n              <main class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n\n                  <Route component={Error} />\n                </div>\n              </main>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  else {\n    let user = JSON.parse(localStorage[\"user\"]);\n    user = user.name;\n\n    return (\n      <div className=\"App\">\n        <div class=\"body\">\n          <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <div class=\"header w-100\">\n              <Route component={Header} />\n            </div>\n          </nav>\n          <div class=\"container-fluid\">\n            <div class=\"row main\">\n              <Route component={NavBarAdmin} />\n              <main class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                <h1 class=\"h2\">R.I.S.E. Admin Dashboard</h1>\n                <div class=\"btn-toolbar mb-2 mb-md-0\">\n                </div>\n                {children}\n              </main>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Page404.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/views/Dashboard.js",["104"],"import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport NavBar from '../components/NavBar';\nimport './Dashboard.css';\n\nexport default function Dashboard({ children }) {\n  const history = useHistory();\n  if (localStorage[\"user\"] == null) {\n    history.replace(\"/login\");\n    return (null);\n  }\n  else {\n    let user = JSON.parse(localStorage[\"user\"]);\n    user = user.name;\n\n    return (\n      <div className=\"App\">\n        <div class=\"body\">\n          <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <div class=\"header w-100\">\n              <Route component={Header} />\n            </div>\n          </nav>\n          <div class=\"container-fluid\">\n            <div class=\"row main\">\n              <Route component={NavBar} />\n              <main class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                <h1 class=\"h2\">R.I.S.E. Analyst Dashboard</h1>\n                <div class=\"btn-toolbar mb-2 mb-md-0\">\n                </div>\n                {children}\n              </main>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/UserDetail.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/UserList.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/CreateUser.js",["105","106","107"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { config } from '../Constants';\nvar url = config.url.API_URL;\n\nexport default class CreateUser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            password:'',\n            role: ''\n        };\n\n        this.onChangeUserName = this.onChangeUserName.bind(this);\n        this.onChangeUserEmail = this.onChangeUserEmail.bind(this);\n        this.onChangeUserPassword = this.onChangeUserPassword.bind(this);\n        this.onChangeUserRole = this.onChangeUserRole.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangeUserName(e) {\n        this.setState({ name: e.target.value })\n    }\n\n    onChangeUserEmail(e) {\n        this.setState({ email: e.target.value })\n    }\n\n    onChangeUserPassword(e) {\n        this.setState({ password: e.target.value })\n    }\n\n    onChangeUserRole(e) {\n        this.setState({ role: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const user = JSON.parse(localStorage[\"user\"]);\n        const token = user.token;\n        axios({\n            method: 'post',\n            url: `${url}/users/new`,\n            headers: { token: token },\n            data: {\n                    name: this.state.name,\n                    email: this.state.email,\n                    password: this.state.password,\n                    role: this.state.role\n            }\n        })\n            .then((res) => {\n                console.log(res.data)\n                alert('New user added');\n                this.props.history.push('/admin/users');\n            }).catch((error) => {\n                console.log(error)\n            });\n\n        this.setState({ name: '', email: '', password: '', role: '' });\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Enter Name</label>\n                        <input type=\"text\" value={this.state.name} onChange={this.onChangeUserName} className=\"form-control\" required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Enter Email</label>\n                        <input type=\"email\" value={this.state.email} onChange={this.onChangeUserEmail} className=\"form-control\" required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Set Password</label>\n                        <input type=\"password\" value={this.state.password} onChange={this.onChangeUserPassword} className=\"form-control\" minLength=\"8\" required/>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label>User role</label>\n                        <select role={this.state.role} onChange={this.onChangeUserRole} className=\"form-control btn btn-sm btn-outline-info dropdown-toggle\">\n                            <option role=\"\">Select User Role</option>\n                            <option role=\"analyst\">Analyst</option>\n                            <option role=\"admin\">Admin</option>\n                        </select>\n                    </div>\n        \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create User\" className=\"btn btn-secondary btn-block\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/NavBarAdmin.js",["108","109"],"import { Link } from 'react-router-dom';\nimport Logout from './Logout';\nimport './NavBarAdmin.css';\n\nexport default function NavBarAdmin() {\n\n  let user = JSON.parse(localStorage[\"user\"]);\n  user = user.name;\n\n  return (\n    <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div class=\"sidebar-sticky\">\n        <ul class=\"nav flex-column\">\n\n        <li class=\"nav-item  flex-md-nowrap p-160\">\n          <img></img>\n          <p class=\"nav-link\">Logged in as</p>\n          <p class=\"nav-link\">{user}</p>\n          </li>\n\n          <li class=\"nav-item\">\n          <Link className=\"nav-link\" to={\"/admin\"}> Home</Link>\n          </li>\n\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" to={\"/admin/users/new\"}>Create User</Link>\n          </li>\n\n          <li class=\"nav-item\">\n          <Link className=\"nav-link\" to={\"/admin/users\"}>Users List</Link>\n          </li>\n\n          <li class=\"nav-item\">\n          <a class=\"nav-link\" onClick={Logout}>Logout</a>\n          </li>\n\n        </ul>\n      </div>\n    </nav>\n  )\n\n} \n","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Header.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/NavBar.js",["110","111"],"import { Link } from 'react-router-dom';\nimport Logout from './Logout';\nimport './NavBarAdmin.css';\n\nexport default function NavBar() {\n\n  let user = JSON.parse(localStorage[\"user\"]);\n  user = user.name;\n\n  return (\n    <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div class=\"sidebar-sticky\">\n        <ul class=\"nav flex-column\">\n\n        <li class=\"nav-item  flex-md-nowrap p-160\">\n          <img></img>\n          <p class=\"nav-link\">Logged in as</p>\n          <p class=\"nav-link\">{user}</p>\n          </li>\n\n          <li class=\"nav-item\">\n          <Link className=\"nav-link\" to={\"/dashboard\"}> Home</Link>\n          </li>\n\n          <li class=\"nav-item\">\n          <a class=\"nav-link\" onClick={Logout}>Logout</a>\n          </li>\n\n        </ul>\n      </div>\n    </nav>\n  )\n\n} ","/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Logout.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/Constants.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/Documentation.js",[],"/Users/louisehamerston/Code/rise-app/finance-user/client/src/components/LoanDetailAdmin.js",["112","113","114"],{"ruleId":"115","severity":1,"message":"116","line":3,"column":25,"nodeType":"117","messageId":"118","endLine":3,"endColumn":30},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":3,"column":50,"nodeType":"117","messageId":"118","endLine":3,"endColumn":58},{"ruleId":"115","severity":1,"message":"124","line":15,"column":8,"nodeType":"117","messageId":"118","endLine":15,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":56,"column":37,"nodeType":"127","messageId":"128","endLine":56,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":36,"column":37,"nodeType":"131","messageId":"132","endLine":36,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":40,"column":42,"nodeType":"131","messageId":"132","endLine":40,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":44,"column":42,"nodeType":"131","messageId":"132","endLine":44,"endColumn":44},{"ruleId":"125","severity":1,"message":"126","line":56,"column":37,"nodeType":"127","messageId":"128","endLine":56,"endColumn":39},{"ruleId":"115","severity":1,"message":"133","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"134","line":45,"column":12,"nodeType":"117","messageId":"118","endLine":45,"endColumn":16},{"ruleId":"115","severity":1,"message":"134","line":16,"column":12,"nodeType":"117","messageId":"118","endLine":16,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":86,"column":37,"nodeType":"137","endLine":86,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":87,"column":37,"nodeType":"137","endLine":87,"endColumn":51},{"ruleId":"135","severity":1,"message":"136","line":88,"column":37,"nodeType":"137","endLine":88,"endColumn":49},{"ruleId":"138","severity":1,"message":"139","line":16,"column":11,"nodeType":"140","endLine":16,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":34,"column":11,"nodeType":"140","endLine":34,"endColumn":48},{"ruleId":"138","severity":1,"message":"139","line":16,"column":11,"nodeType":"140","endLine":16,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":26,"column":11,"nodeType":"140","endLine":26,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":36,"column":37,"nodeType":"131","messageId":"132","endLine":36,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":40,"column":42,"nodeType":"131","messageId":"132","endLine":40,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":44,"column":42,"nodeType":"131","messageId":"132","endLine":44,"endColumn":44},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'Redirect' is defined but never used.","'Page404' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavBar' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]